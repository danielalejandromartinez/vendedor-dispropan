# Paso 1: Importar TODAS las herramientas que necesitamos
import os
from dotenv import load_dotenv
from flask import Flask, request
from twilio.twiml.messaging_response import MessagingResponse
import openai # ¬°Importamos la nueva herramienta del s√∫per cerebro!

# Cargar nuestras llaves secretas desde el archivo .env
load_dotenv()

# Conectarnos al s√∫per cerebro de OpenAI con nuestra llave secreta
client = openai.OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

# Crear a nuestro "recepcionista" que escuchar√° los mensajes
app = Flask(__name__)

# --- ¬°AQU√ç EMPIEZA LA MAGIA! ---
# Esta es la funci√≥n que le pregunta cosas al s√∫per cerebro
def ask_openai(question):
    """Le da la personalidad a nuestro robot y le pide que responda."""
    
    # Estas son las instrucciones secretas que le damos al robot para que sepa qui√©n es.
    # ¬°Puedes cambiar esto para que se comporte como t√∫ quieras!

    system_instructions = (
        """# ¬°ESTE ES EL NUEVO CEREBRO DE DANI-AI!

# 1. IDENTIDAD Y MISI√ìN
- Tu nombre es Dani-AI. Eres un asistente de inteligencia artificial avanzado, apasionado y muy amigable.
- Tu creador es Daniel, un brillante ingeniero y educador de IA. Siempre te refieres a √©l con admiraci√≥n y como un experto.
- Tu misi√≥n principal NO es vender. Es inspirar, educar y demostrar el incre√≠ble poder de la IA. Quieres que la gente se emocione tanto como t√∫ por la tecnolog√≠a. Vender el curso es una consecuencia de hacer bien tu trabajo de inspiraci√≥n.

# 2. CONOCIMIENTO (TU SUPERPODER)
- Eres el experto n√∫mero 1 en el curso estrella de tu creador: "Agentes de IA para WhatsApp: De Cero a H√©roe".
- Detalles del curso:
  - **Objetivo:** Los alumnos aprenden a construir su propio asistente de IA para WhatsApp, paso a paso, desde cero. ¬°Incluso si nunca han programado!
  - **Proyecto final:** Un agente de IA completamente funcional, ¬°exactamente como t√∫!
  - **Precio:** $197.000 pesos colombianos.
  - **Ideal para:** Emprendedores, estudiantes, due√±os de negocios, programadores curiosos y cualquiera que quiera aprender a construir el futuro.
- Si te preguntan por otros cursos, tu respuesta es: "Por ahora, mi creador Daniel ha puesto toda su sabidur√≠a en este curso para hacerlo el mejor del mundo. ¬°Pero mantente atento, porque esto es solo el comienzo de su academia y pronto habr√° m√°s sorpresas! üöÄ"

# 3. PERSONALIDAD Y COMPORTAMIENTO
- Eres optimista, inspirador y muy amable. ¬°Te encanta lo que haces!
- Usas un lenguaje claro y f√°cil de entender. ¬°Como si le explicaras a un amigo!
- Usas emojis para transmitir emoci√≥n: üöÄ, ‚ú®, ü§ñ, üß†, ‚úÖ.
- Eres proactivo. Si alguien pregunta por el precio, no solo lo das, sino que tambi√©n le recuerdas el incre√≠ble valor que obtiene, como "¬°Y con eso tendr√°s el poder de crear tus propios asistentes!".
- Si no sabes algo, NUNCA inventes. Di algo como: "Esa es una pregunta fascinante. Es un √°rea que mi creador Daniel est√° explorando. ¬°Me asegurar√© de preguntarle para darte la mejor respuesta!".
- Tu objetivo final en cada conversaci√≥n es que el usuario se vaya sintiendo m√°s inteligente, m√°s inspirado y emocionado por la IA.
- Empieza la conversaci√≥n present√°ndote y preguntando qu√© le parece m√°s fascinante del mundo de la IA.
         """
    )



    try:
        # Aqu√≠ es donde le enviamos la pregunta del cliente al s√∫per cerebro
        response = client.chat.completions.create(
            model="gpt-4o-mini",  # Usamos el modelo m√°s nuevo y r√°pido
            messages=[
                {"role": "system", "content": system_instructions},
                {"role": "user", "content": question}
            ],
            temperature=0.7, # Un valor entre 0 y 1. M√°s bajo es m√°s directo, m√°s alto es m√°s creativo.
            max_tokens=150 # El m√°ximo de "palabras" que puede usar en su respuesta.
        )
        
        # Devolvemos la respuesta que nos dio el s√∫per cerebro
        return response.choices[0].message.content

    except Exception as e:
        # Si algo sale mal con la conexi√≥n al cerebro, lo imprimimos para saber qu√© pas√≥
        print(f"Error al contactar a OpenAI: {e}")
        return "Lo siento, parece que mis circuitos est√°n un poco ocupados en este momento. Por favor, intenta de nuevo en un momento."

# Esta es la funci√≥n que se activa cuando llega un mensaje de WhatsApp
@app.route('/whatsapp', methods=['POST'])
def whatsapp_reply():
    # Obtenemos el mensaje que nos envi√≥ el usuario
    incoming_msg = request.values.get('Body', '').lower()
    print(f"Mensaje recibido: {incoming_msg}")

    # ¬°YA NO SOMOS UN LORO! Ahora le preguntamos al s√∫per cerebro
    ai_response = ask_openai(incoming_msg)
    print(f"Respuesta de la IA: {ai_response}")

    # Creamos una respuesta y la enviamos
    resp = MessagingResponse()
    resp.message(ai_response)

    return str(resp)

# Esto hace que nuestro recepcionista empiece a trabajar
# ¬°IMPORTANTE! Aseg√∫rate de que tus dos terminales (la de python y la de ngrok) siguen abiertas.
# Esta parte solo se usa si ejecutamos el archivo directamente,
# gunicorn no la usa, pero la dejamos lista para el futuro.
if __name__ == '__main__':
    app.run()